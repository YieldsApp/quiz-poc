{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/questions/dialog-data-result-dialog.html","webpack:///./src/app/components/questions/questions.component.html","webpack:///./src/app/components/questions/questions.component.scss","webpack:///./src/app/components/questions/questions.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/models/answer.ts","webpack:///./src/app/services/questions.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACyB;AAEhF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,4FAAkB,EAAE;CAEhE,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACb7B,+DAA+D,SAAS,ywBAAywB,mM;;;;;;;;;;;ACAj1B,iCAAiC,kDAAkD,2BAA2B,EAAE,sBAAsB,uBAAuB,2BAA2B,EAAE,+CAA+C,unB;;;;;;;;;;;;;;;;;;ACA/L;AACD;AAOzC;IAGE,sBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,UAAK,GAAG,6BAA6B,CAAC;IAEA,CAAC;IAEvC,oCAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACrD,CAAC;IAPU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAI4B,sDAAM;OAHvB,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEe;AACT;AACgC;AACrB;AACJ;AACU;AACV;AACkD;AAChD;AAuBxD;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6FAAkB;gBAClB,iGAAsB;aACvB;YACD,eAAe,EAAE,CAAC,iGAAsB,CAAC;YACzC,OAAO,EAAE;gBACP,qEAAmB;gBACnB,wEAAc;gBACd,uEAAa;gBACb,oEAAgB;gBAChB,4FAAuB;gBACvB,0DAAW,EAAC,kEAAmB;gBAC/B,qEAAgB;gBAChB,sEAAgB;aAEjB;YACD,SAAS,EAAE,EAAG;YACd,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClCtB,yHAAyH,aAAa,oB;;;;;;;;;;;ACAtI,4FAA4F,eAAe,4QAA4Q,aAAa,mMAAmM,6IAA6I,sJ;;;;;;;;;;;ACAptB,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;ACAL;AACjB;AAC6B;AAEvB;AACgB;AAW/D;IACE,gCAA4C,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IADrD,sBAAsB;QAJlC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,sIAA6C;SAC9C,CAAC;QAEa,6GAAM,CAAC,iEAAe,CAAC;;OADzB,sBAAsB,CAElC;IAAD,6BAAC;CAAA;AAFkC;AAUnC;IAIE,4BAAoB,MAAc,EAAU,OAAyB,EAAQ,MAAiB;QAA1E,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAkB;QAAQ,WAAM,GAAN,MAAM,CAAW;IAC9F,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAIC;QAHC,gCAAgC;QAChC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;aAC5B,SAAS,CAAC,UAAC,QAAkB,IAAK,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACjE,CAAC;IAED,6CAAgB,GAAhB;QAAA,iBAWC;QATC,IAAI,MAAM,GAAG,IAAI,4DAAM,EAAE,CAAC;QAC1B,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAEhC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;aAChD,SAAS,CAAC,UAAC,QAAkB;YAC5B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,sCAAS,GAAT;QAAA,iBAeC;QAdC,IAAI,MAAM,GAAG,IAAI,4DAAM,EAAE,CAAC;QAC1B,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC;QAEhC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE9C,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YAC3C,KAAI,CAAC,MAAM,GAAE,IAAI,CAAC,MAAM,CAAC;YAEzB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE;gBACvC,IAAI,EAAE;oBACJ,MAAM,EAAG,IAAI,CAAC,MAAM;iBACrB;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IA1CU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0HAAyC;YAEzC,SAAS,EAAE,CAAC,mFAAgB,CAAC;;SAC9B,CAAC;+EAK4B,sDAAM,EAAmB,mFAAgB,EAAgB,2DAAS;OAJnF,kBAAkB,CA4C9B;IAAD,yBAAC;CAAA;AA5C8B;;;;;;;;;;;;;;;;;;;;;;;AC1BuB;AACC;AACL;AACF;AACT;AAsCZ;AA6C3B;IAAA;IAA6B,CAAC;IAAjB,cAAc;QA3C1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,iEAAc;gBACd,+DAAa;gBACb,qEAAc;gBACd,uEAAqB;gBACrB,gEAAc;gBACd,sEAAoB;gBACpB,iEAAe;gBACf,uEAAqB;gBACrB,+DAAa;gBACb,mEAAiB;gBACjB,gEAAc;gBACd,kEAAgB;gBAChB,qEAAmB;gBACnB,iEAAe;gBACf,kEAAgB;gBAChB,oEAAkB;gBAClB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,qEAAmB;gBACnB,oEAAkB;gBAClB,sEAAoB;gBACpB,0EAAwB;gBACxB,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,kEAAgB;gBAChB,iEAAe;gBACf,sEAAoB;gBACpB,mEAAiB;gBACjB,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,kEAAgB;gBAChB,kEAAgB;gBAChB,+DAAa;gBACb,sEAAe;aAChB;SACF,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;ACvF3B;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACH0C;AACO;AAI3B;AAKvB;IAGE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAA2C,EAAE,CAAC;IAEb,CAAC;IAGvC,6BAA6B;IAC7B,2CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,iBAAiB,CAAC,CAAC;IACpD,CAAC;IAED,oCAAS,GAAT,UAAU,QAAkB,EAAC,MAAc;QAEzC,IAAG,6CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,EAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAC,CAAC;YAAE,OAAO;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,CAAC;IACD,6BAA6B;IAC7B,0CAAe,GAAf,UAAgB,QAAkB,EAAC,MAAc;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAqB,QAAQ,CAAC,EAAE,SAAI,MAAM,CAAC,EAAI,CAAC,CAAC;IACxE,CAAC;IAED,oCAAS,GAAT;QACG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,cAAc,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzE,CAAC;IAvBQ,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAHzB,gBAAgB,CAyB5B;IAAD,uBAAC;CAAA;AAzB4B;;;;;;;;;;;;;ACV7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuestionsComponent } from './components/questions/questions.component';\n\nconst routes: Routes = [\n  { path: 'smart-ai-recognition', component: QuestionsComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-toolbar color=\\\"primary\\\"> Welcome to {{ title }}!</mat-toolbar>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n\\n    <div fxFlex=\\\"33\\\" class=\\\"one\\\" >\\n        <mat-card class=\\\"card-start-quiz\\\">\\n            <mat-card-header>\\n              <div mat-card-avatar class=\\\"header-image\\\"></div>\\n              <mat-card-title>צמח</mat-card-title>\\n              <mat-card-subtitle>צמח 1</mat-card-subtitle>\\n            </mat-card-header>\\n            <img mat-card-image src=\\\"/assets/image1.png\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n            <mat-card-content>\\n              <p>\\n               to start quiz please click on button\\n              </p>\\n            </mat-card-content>\\n            <mat-card-actions fxLayoutAlign=\\\"space-around center\\\">\\n                <button (click)=\\\"goToQuestions();\\\" mat-flat-button color=\\\"accent\\\">Start</button>\\n            </mat-card-actions>\\n          </mat-card>\\n    </div>\\n\\n  \\n  </div>\\n  \\n   \\n    \\n      \\n\\n\\n<router-outlet></router-outlet>\"","module.exports = \".header-image {\\n  background-image: url(\\\"/assets/image1.png\\\");\\n  background-size: cover; }\\n\\n.card-start-quiz {\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFByb2plY3RzXFxxdWl6LXBvYy9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtFO0VBQ0UsNENBQTJDO0VBQzNDLHVCQUFzQixFQUN2Qjs7QUFDRDtFQUNJLG1CQUFrQjtFQUNsQix1QkFBc0IsRUFDekIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbiAgXHJcblxyXG4gIFxyXG4gIC5oZWFkZXItaW1hZ2Uge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvYXNzZXRzL2ltYWdlMS5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgfVxyXG4gIC5jYXJkLXN0YXJ0LXF1aXp7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9Il19 */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'yieldsApp Smart Recognition';\n\n  constructor(private router: Router) { }\n\n  goToQuestions(): void {\n    this.router.navigateByUrl('/smart-ai-recognition');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MaterialModule} from './material/material.module';\nimport {MatNativeDateModule} from '@angular/material';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { QuestionsComponent, DialogDataResultDialog } from './components/questions/questions.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionsComponent,\n    DialogDataResultDialog\n  ],\n  entryComponents: [DialogDataResultDialog],\n  imports: [\n    MatNativeDateModule,\n    MaterialModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule\n   \n  ],\n  providers: [ ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1 mat-dialog-title>Favorite Animal</h1>\\r\\n<div mat-dialog-content>\\r\\n  The Result Is\\r\\n  <b><h3>{{data.result}}</h3></b>\\r\\n</div>\"","module.exports = \"<mat-card *ngIf=\\\"question\\\">\\n  <mat-card-header>\\n    <mat-card-title>{{question.text}}</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"choose an option\\\" [(ngModel)]=\\\"selectedAnswer\\\" >\\n        <mat-option *ngFor=\\\"let answer of question.answers\\\" [value]=\\\"answer.id\\\">\\n          {{answer.text}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n  </mat-card-content>\\n  <mat-card-actions fxLayoutAlign=\\\"space-around center\\\">\\n    <button (click)=\\\"goToNextQuestion();\\\" [disabled] =\\\"question.isLast || !this.selectedAnswer\\\" mat-flat-button color=\\\"accent\\\">Next</button>\\n    <button (click)=\\\"calculate();\\\" [disabled] =\\\"!question.isLast || !this.selectedAnswer\\\" mat-flat-button color=\\\"accent\\\">Recognize</button>\\n  </mat-card-actions>\\n\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionsService } from 'src/app/services/questions.service';\nimport { Question } from 'src/app/models/question';\nimport { Answer } from 'src/app/models/answer';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\n\n\nexport interface DialogData {\n  result:string;\n}\n\n@Component({\n  selector: 'dialog-data-result-dialog',\n  templateUrl: 'dialog-data-result-dialog.html',\n})\nexport class DialogDataResultDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss'],\n  providers: [QuestionsService]\n})\nexport class QuestionsComponent implements OnInit {\n  question: Question;\n  selectedAnswer: number;\n  result: string;\n  constructor(private router: Router, private service: QuestionsService,public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    //console.log(\"ngOnInit fired\");\n    this.service.getFirstQuestion()\n      .subscribe((question: Question) => this.question = question);\n  }\n\n  goToNextQuestion() {\n\n    var answer = new Answer();\n    answer.id = this.selectedAnswer;\n\n    this.service.addAnswer(this.question, answer);\n    this.service.getNextQuestion(this.question, answer)\n      .subscribe((question: Question) => {\n        this.question = question;\n        this.selectedAnswer = null;\n      });\n  }\n\n\n  calculate() {\n    var answer = new Answer();\n    answer.id = this.selectedAnswer;\n\n    this.service.addAnswer(this.question, answer);\n\n    this.service.calculate().subscribe((data: any) => {\n      this.result= data.result;\n\n      this.dialog.open(DialogDataResultDialog, {\n        data: {\n          result:  data.result\n        }\n      });\n    });\n  }\n\n}\n\n\n\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n","export class Answer {\n    public id: number;\n    public text: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Question } from '../models/question';\nimport { Observable } from 'rxjs';\nimport { Answer } from '../models/answer';\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n  answers: {questionId: number, answerId: number}[]=[];\n\n  constructor(private http: HttpClient) { }\n\n    \n    // Get all posts from the API\n    getFirstQuestion() : Observable<Question>  {\n      return this.http.get<Question>('/api/Question/0');\n    }\n\n    addAnswer(question: Question,answer: Answer){\n\n      if(_.find(this.answers,{questionId: question.id})) return;\n      this.answers.push({questionId: question.id, answerId:answer.id });\n    }\n    // Get all posts from the API\n    getNextQuestion(question: Question,answer: Answer) {\n      return this.http.get(`/api/nextQuestion/${question.id}/${answer.id}`);\n    }\n\n    calculate():  Observable<{ result: string}> {\n       return this.http.post<{ result: string}>('/api/results',this.answers);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}