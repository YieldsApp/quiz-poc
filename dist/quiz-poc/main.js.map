{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/questions/dialog-data-result-dialog.html","webpack:///./src/app/components/questions/questions.component.html","webpack:///./src/app/components/questions/questions.component.scss","webpack:///./src/app/components/questions/questions.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/models/answer.ts","webpack:///./src/app/services/questions.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { QuestionsComponent } from './components/questions/questions.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'smart-ai-recognition', component: QuestionsComponent },\r\n  { path: '',  redirectTo: '/smart-ai-recognition', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n\\r\\n  <mat-toolbar-row >\\r\\n    <span>{{ title }}</span>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\"","module.exports = \"mat-toolbar-row {\\n  white-space: normal; }\\n\\n.spacer {\\n  flex: 1 1 auto; }\\n\\n.icon {\\n  padding: 0 14px; }\\n\\n.header-image {\\n  background-image: url(\\\"/assets/image1.png\\\");\\n  background-size: cover; }\\n\\n.card-start-quiz {\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFzXnteX16nXkVxcRGVza3RvcFxc16TXqNeV15nXp9eYINeS157XqFxccXVpei1wb2Mvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQztFQUNDLG9CQUFtQixFQUNuQjs7QUFFQTtFQUNFLGVBQWMsRUFDZjs7QUFDRDtFQUNFLGdCQUFlLEVBQ2hCOztBQUVEO0VBQ0UsNENBQTJDO0VBQzNDLHVCQUFzQixFQUN2Qjs7QUFDRDtFQUNJLG1CQUFrQjtFQUNsQix1QkFBc0IsRUFDekIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbiAgXHJcblxyXG4gbWF0LXRvb2xiYXItcm93e1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiB9IFxyXG5cclxuICAuc3BhY2VyIHtcclxuICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gIH1cclxuICAuaWNvbiB7XHJcbiAgICBwYWRkaW5nOiAwIDE0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5oZWFkZXItaW1hZ2Uge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvYXNzZXRzL2ltYWdlMS5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgfVxyXG4gIC5jYXJkLXN0YXJ0LXF1aXp7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcblxyXG4gIl19 */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'yieldsApp diseases identification module';\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  goToQuestions(): void {\r\n    this.router.navigateByUrl('/smart-ai-recognition');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MaterialModule} from './material/material.module';\r\nimport {MatNativeDateModule} from '@angular/material';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { QuestionsComponent, DialogDataResultDialog } from './components/questions/questions.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    QuestionsComponent,\r\n    DialogDataResultDialog\r\n  ],\r\n  entryComponents: [DialogDataResultDialog],\r\n  imports: [\r\n    MatNativeDateModule,\r\n    MaterialModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule\r\n   \r\n  ],\r\n  providers: [ ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1 mat-dialog-title>Identification</h1>\\r\\n<div mat-dialog-content>\\r\\n  <b><h3>{{data.name}}</h3></b>\\r\\n   <div *ngIf=\\\"data.probability>0\\\">probabilty:  \\r\\n    <b><h3>{{data.probability}} %</h3></b>\\r\\n   </div>\\r\\n  \\r\\n</div>\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\r\\n\\r\\n  <div fxFlex=\\\"90\\\" fxFlex.gt-xs=\\\"33\\\" class=\\\"one\\\">\\r\\n    \\r\\n    <button mat-button (click)=\\\"fileInput.click()\\\" *ngIf=\\\"!url\\\">\\r\\n      <mat-icon class=\\\"icon\\\">library_add</mat-icon>\\r\\n      <span class=\\\"image-select\\\">Select Image</span>\\r\\n      <input #fileInput type=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" style=\\\"display:none;\\\" />\\r\\n    </button>\\r\\n\\r\\n    <mat-card *ngIf=\\\"question && url\\\">\\r\\n      <img mat-card-image [src]=\\\"url\\\" *ngIf=\\\"url\\\" alt=\\\"Photo of a Shiba Inu\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>{{question.text}}</mat-card-title>\\r\\n      </mat-card-header>\\r\\n\\r\\n      <mat-card-content>\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"choose an option\\\" [(ngModel)]=\\\"selectedAnswer\\\">\\r\\n            <mat-option *ngFor=\\\"let answer of question.answers\\\" [value]=\\\"answer.id\\\">\\r\\n              {{answer.text}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <button (click)=\\\"goToNextQuestion();\\\" [disabled]=\\\"question.isLast || !this.selectedAnswer\\\" mat-flat-button\\r\\n          color=\\\"accent\\\">Next</button>\\r\\n        <button (click)=\\\"calculate();\\\" [disabled]=\\\"!question.isLast || !this.selectedAnswer\\\" mat-flat-button color=\\\"accent\\\">Recognize</button>\\r\\n      </mat-card-actions>\\r\\n\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { QuestionsService } from 'src/app/services/questions.service';\r\nimport { Question } from 'src/app/models/question';\r\nimport { Answer } from 'src/app/models/answer';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\nexport interface DialogData {\r\n  name: string;\r\n  probability: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-data-result-dialog',\r\n  templateUrl: 'dialog-data-result-dialog.html',\r\n})\r\nexport class DialogDataResultDialog {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './questions.component.html',\r\n  styleUrls: ['./questions.component.scss'],\r\n  providers: [QuestionsService]\r\n})\r\nexport class QuestionsComponent implements OnInit {\r\n  question: Question;\r\n  selectedAnswer: number;\r\n  result: DialogData;\r\n  url: string;\r\n \r\n\r\n  constructor(private router: Router, private service: QuestionsService, public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    //console.log(\"ngOnInit fired\");\r\n    this.service.getFirstQuestion()\r\n      .subscribe((question: Question) => this.question = question);\r\n  }\r\n\r\n\r\n  onSelectFile(event) { // called each time file input changes\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\r\n\r\n      reader.onload = (event:any) => { // called once readAsDataURL is completed\r\n        this.url = event.target.result;\r\n      }\r\n    }\r\n}\r\n  goToNextQuestion() {\r\n\r\n    var answer = new Answer();\r\n    answer.id = this.selectedAnswer;\r\n\r\n    this.service.addAnswer(this.question, answer);\r\n    this.service.getNextQuestion(this.question, answer)\r\n      .subscribe((question: Question) => {\r\n        this.question = question;\r\n        this.selectedAnswer = null;\r\n      });\r\n  }\r\n\r\n\r\n  calculate() {\r\n    var answer = new Answer();\r\n    answer.id = this.selectedAnswer;\r\n\r\n    this.service.addAnswer(this.question, answer);\r\n\r\n    if (this.result) {\r\n      this.showDialogResult();\r\n      return;\r\n    }\r\n\r\n    this.service.calculate().subscribe((data: any) => {\r\n      this.result = data;\r\n      this.showDialogResult();\r\n    });\r\n  }\r\n\r\n  showDialogResult(): void {\r\n    this.dialog.open(DialogDataResultDialog, {\r\n      data: this.result\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n","export class Answer {\r\n    public id: number;\r\n    public text: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Question } from '../models/question';\r\nimport { Observable } from 'rxjs';\r\nimport { Answer } from '../models/answer';\r\nimport _ from 'lodash';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionsService {\r\n  answers: {questionId: number, answerId: number}[]=[];\r\n\r\n  baseUrl: string ='';\r\n  constructor(private http: HttpClient) { }\r\n\r\n    \r\n    // Get all posts from the API\r\n    getFirstQuestion() : Observable<Question>  {\r\n      return this.http.get<Question>(this.baseUrl+ '/api/Question/0');\r\n    }\r\n\r\n    addAnswer(question: Question,answer: Answer){\r\n\r\n      if(_.find(this.answers,{questionId: question.id})) return;\r\n      this.answers.push({questionId: question.id, answerId:answer.id });\r\n    }\r\n    // Get all posts from the API\r\n    getNextQuestion(question: Question,answer: Answer) {\r\n      return this.http.get(this.baseUrl+  `/api/nextQuestion/${question.id}/${answer.id}`);\r\n    }\r\n\r\n    calculate():  Observable<{ name: string, probability:number}> {\r\n       return this.http.post<{ name: string, probability:number}>(this.baseUrl+  '/api/results',this.answers);\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}